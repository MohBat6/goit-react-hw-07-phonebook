{"version":3,"sources":["components/Section/Section.module.css","components/Input/Input.module.css","components/Button/Button.module.css","components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Section/Section.js","components/Input/Input.js","components/Button/button.js","services/contacts-api.js","redux/contacts/contacts-actions.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/Form/Form.js","components/ContactsList/ContactsList.js","components/Contacts/Contacts.js","App.js","redux/contacts/contacts-reducer.js","redux/store.js","index.js","components/ContactsList/ContactsList.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","Input","type","name","pattern","value","handleInputChange","label","input","required","onChange","autoComplete","Button","Btn","BASE_URL","getContacts","a","axios","get","data","addContact","contact","post","removeContact","id","delete","setUpFilter","createAction","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","removeContactsRequest","removeContactsSuccess","removeContactsError","fetchContacts","dispatch","addContactOperation","removeContactOperation","idToRemove","getItems","state","contacts","items","entities","getFilter","filter","contactsSelectors","getFilteredContacts","createSelector","normalizedFilter","toLowerCase","includes","Form","useState","setName","number","setNumber","useSelector","useDispatch","handleInput","event","currentTarget","form","onSubmit","preventDefault","find","alert","contactsOperations","uuidv4","ContactsList","filteredContacts","list","map","text","phone","removeBtn","onClick","Contacts","actions","App","useEffect","length","createReducer","_","action","payload","isLoading","error","itemsReducer","combineReducers","filterReducer","contactsReducer","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4553be8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__25VTs\",\"title\":\"Section_title__3yvwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__2awKy\",\"input\":\"Input_input__16cYq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Btn\":\"Button_Btn__2Hyxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__tpQ3d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Contacts_title__1X_Y-\"};","import React from 'react';\r\nimport styles from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section className={styles.section}>\r\n    <h1 className={styles.title}>{title}</h1>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.defaultProps = {\r\n  title: '',\r\n  children: [],\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Input.module.css';\r\n\r\nconst Input = ({ type, name, pattern, title, value, handleInputChange, label }) => (\r\n  <label className={styles.label}>\r\n    {label}:\r\n    <input\r\n      className={styles.input}\r\n      type={type}\r\n      name={name}\r\n      pattern={pattern}\r\n      title={title}\r\n      required\r\n      value={value}\r\n      onChange={handleInputChange}\r\n      autoComplete=\"off\"\r\n    />\r\n  </label>\r\n);\r\n\r\nInput.defaultProps = {\r\n  type: 'text',\r\n  label: '',\r\n};\r\nInput.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  pattern: PropTypes.string.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  handleInputChange: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string,\r\n};\r\n\r\nexport default Input;","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = () => (\r\n  <button className={styles.Btn} type=\"submit\">\r\n    Add contact\r\n  </button>\r\n);\r\n\r\nexport default Button;","import axios from 'axios';\r\nconst BASE_URL = 'http://localhost:3030/contacts';\r\n\r\nexport async function getContacts() {\r\n  const { data } = await axios.get(BASE_URL);\r\n\r\n  return data;\r\n}\r\nexport async function addContact(contact) {\r\n  const { data } = await axios.post(BASE_URL, contact);\r\n  return data;\r\n}\r\nexport async function removeContact(id) {\r\n  const { data } = await axios.delete(`${BASE_URL}/${id}`);\r\n  return data;\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst setUpFilter = { setUpFilter: createAction('phonebook/filter') };\r\n\r\nexport default setUpFilter;\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const removeContactsRequest = createAction('contacts/removeContactRequest');\r\nexport const removeContactsSuccess = createAction('contacts/removeContactSuccess');\r\nexport const removeContactsError = createAction('contacts/removeContactError');","import { getContacts, addContact, removeContact } from '../../services/contacts-api';\r\n// import { createAsyncThunk } from '@reduxjs/toolkit';\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  fetchContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  removeContactsError,\r\n  removeContactsRequest,\r\n  removeContactsSuccess,\r\n} from './contacts-actions';\r\n\r\nexport const fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const data = await getContacts();\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error));\r\n  }\r\n};\r\n\r\n// export const fetchContacts = createAsyncThunk(\r\n//   'contacts/fetchContacts',\r\n//   async (_, { rejectWithValue }) => {\r\n//     try {\r\n//       return await getContacts();\r\n//     } catch (error) {\r\n//       return rejectWithValue(error);\r\n//     }\r\n//   },\r\n// );\r\n\r\nexport const addContactOperation = data => async dispatch => {\r\n  dispatch(addContactRequest());\r\n\r\n  try {\r\n    await addContact(data);\r\n    dispatch(addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(addContactError(error));\r\n  }\r\n};\r\n\r\n// export const addContactOperation = createAsyncThunk('contacts/addContact', async data => {\r\n//   await addContact(data);\r\n//   return data;\r\n// });\r\n\r\nexport const removeContactOperation = idToRemove => async dispatch => {\r\n  dispatch(removeContactsRequest());\r\n\r\n  try {\r\n    await removeContact(idToRemove);\r\n    dispatch(removeContactsSuccess(idToRemove));\r\n  } catch (error) {\r\n    dispatch(removeContactsError(error));\r\n  }\r\n};\r\n\r\n// export const removeContactOperation = createAsyncThunk(\r\n//   'contacts/removeContact',\r\n//   async idToRemove => {\r\n//     await removeContact(idToRemove);\r\n//     return idToRemove;\r\n//   },\r\n// );","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getItems = state => state.contacts.items.entities;\r\nconst getFilter = state => state.contacts.filter;\r\n\r\nconst getFilteredContacts = createSelector([getItems, getFilter], (items, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return items.filter(({ name }) => name.toLowerCase().includes(normalizedFilter));\r\n});\r\n\r\nconst contactsSelectors = {\r\n  getItems,\r\n  getFilter,\r\n  getFilteredContacts,\r\n};\r\n\r\nexport default contactsSelectors;","import React, { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\n\r\nimport styles from './Form.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\r\n\r\nconst Form = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const items = useSelector(contactsSelectors.getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleInput = event => {\r\n    switch (event.currentTarget.name) {\r\n      case 'name':\r\n        setName(event.currentTarget.value);\r\n        return;\r\n      case 'number':\r\n        setNumber(event.currentTarget.value);\r\n        return;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    if (items.find(contact => contact.name === name)) {\r\n      alert('Attempt to create existing contact!');\r\n      return;\r\n    }\r\n\r\n    dispatch(contactsOperations.addContactOperation({ name, id: uuidv4(), number }));\r\n\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={onFormSubmit}>\r\n      <Input\r\n        label=\"Name\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        handleInputChange={handleInput}\r\n        value={name}\r\n      />\r\n      <Input\r\n        label=\"Phone number\"\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять из цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        value={number}\r\n        handleInputChange={handleInput}\r\n      />\r\n      <Button />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './ContactsList.module.css';\r\nimport { contactsSelectors, contactsOperations } from 'redux/contacts';\r\n\r\nconst ContactsList = () => {\r\n  const filteredContacts = useSelector(contactsSelectors.getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={styles.list}>\r\n      {filteredContacts.map(({ name, id, number }) => (\r\n        <li key={id} className={styles.contact}>\r\n          <p className={styles.text}>\r\n            <span className={styles.name}>{name}</span>{' '}\r\n            <span className={styles.phone}>{number}</span>\r\n          </p>\r\n          <button\r\n            className={styles.removeBtn}\r\n            type=\"button\"\r\n            onClick={() => dispatch(contactsOperations.removeContactOperation(id))}\r\n          >\r\n            Remove contact\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Input from '../Input';\r\nimport ContactsList from '../ContactsList';\r\nimport styles from './Contacts.module.css';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsSelectors, actions } from 'redux/contacts';\r\n\r\nconst Contacts = ({ title }) => {\r\n  const filter = useSelector(contactsSelectors.getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleFilter = event => {\r\n    dispatch(actions.setUpFilter(event.currentTarget.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h2 className={styles.title}>{title}</h2>\r\n      <Input\r\n        label=\"Find contacts by name:\"\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        value={filter}\r\n        handleInputChange={handleFilter}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n      />\r\n      <ContactsList />\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.defaultProps = {\r\n  title: '',\r\n};\r\nContacts.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Contacts;","import 'App.css';\nimport React, { useEffect } from 'react';\n\nimport Section from 'components/Section';\nimport Form from 'components/Form';\nimport Contacts from 'components/Contacts';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from 'redux/contacts';\n\nconst App = () => {\n  const items = useSelector(contactsSelectors.getItems);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className=\"App\">\n      <Section title=\"Phonebook\">\n        <Form />\n        {items.length > 0 && <Contacts title=\"Contacts\" />}\n      </Section>\n    </div>\n  );\n};\n\nexport default App;","import {\r\n    createReducer,\r\n    // createSlice\r\n  } from '@reduxjs/toolkit';\r\n  import { combineReducers } from 'redux';\r\n  import actions, {\r\n    addContactError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    fetchContactsError,\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    removeContactsError,\r\n    removeContactsRequest,\r\n    removeContactsSuccess,\r\n  } from './contacts-actions';\r\n  // import { addContactOperation, fetchContacts, removeContactOperation } from './contacts-operations';\r\n  \r\n  const entities = createReducer([], {\r\n    // [fetchContacts.fulfilled]: (_, action) => action.payload,\r\n  \r\n    // [addContactOperation.fulfilled]: (state, action) => [...state, action.payload],\r\n  \r\n    // [removeContactOperation.fulfilled]: (state, { payload }) =>\r\n    //   state.filter(({ id }) => id !== payload),\r\n  \r\n    [fetchContactsSuccess]: (_, action) => action.payload,\r\n  \r\n    [addContactSuccess]: (state, action) => [...state, action.payload],\r\n  \r\n    [removeContactsSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n  });\r\n  const isLoading = createReducer(false, {\r\n    // [fetchContacts.pending]: () => true,\r\n    // [fetchContacts.fulfilled]: () => false,\r\n    // [fetchContacts.rejected]: () => false,\r\n  \r\n    // [addContactOperation.pending]: () => true,\r\n    // [addContactOperation.fulfilled]: () => false,\r\n    // [addContactOperation.rejected]: () => false,\r\n  \r\n    // [removeContactOperation.pending]: () => true,\r\n    // [removeContactOperation.fulfilled]: () => false,\r\n    // [removeContactOperation.rejected]: () => false,\r\n  \r\n    [fetchContactsRequest]: () => true,\r\n    [fetchContactsSuccess]: () => false,\r\n    [fetchContactsError]: () => false,\r\n  \r\n    [addContactRequest]: () => true,\r\n    [addContactSuccess]: () => false,\r\n    [addContactError]: () => false,\r\n  \r\n    [removeContactsRequest]: () => true,\r\n    [removeContactsSuccess]: () => false,\r\n    [removeContactsError]: () => false,\r\n  });\r\n  const error = createReducer(null, {\r\n    // [fetchContacts.rejected]: (_, { payload }) => payload,\r\n    // [fetchContacts.pending]: () => null,\r\n  \r\n    // [addContactOperation.rejected]: (_, { payload }) => payload,\r\n    // [addContactOperation.pending]: () => null,\r\n  \r\n    // [removeContactOperation.rejected]: (_, { payload }) => payload,\r\n    // [removeContactOperation.pending]: () => null,\r\n  \r\n    [fetchContactsError]: (_, { payload }) => payload,\r\n    [fetchContactsRequest]: () => null,\r\n  \r\n    [addContactError]: (_, { payload }) => payload,\r\n    [addContactRequest]: () => null,\r\n  \r\n    [removeContactsError]: (_, { payload }) => payload,\r\n    [removeContactsRequest]: () => null,\r\n  });\r\n  \r\n  const itemsReducer = combineReducers({\r\n    entities,\r\n    isLoading,\r\n    error,\r\n  });\r\n  \r\n  const filterReducer = createReducer('', {\r\n    [actions.setUpFilter]: (_, { payload }) => payload,\r\n  });\r\n  \r\n  const contactsReducer = combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer,\r\n  });\r\n  export default contactsReducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport contactsReducer from './contacts/contacts-reducer';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n  },\r\n  devTools: process.env.NODE_ENV !== 'production',\r\n});\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/store';\n\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__31oRx\",\"text\":\"ContactsList_text__2OXS7\",\"contact\":\"ContactsList_contact__29gjm\",\"name\":\"ContactsList_name__1K4In\",\"phone\":\"ContactsList_phone__1JK0m\",\"removeBtn\":\"ContactsList_removeBtn__3LFMk\"};"],"sourceRoot":""}